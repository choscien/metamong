<style>
    .top-member-menu {
        position: absolute;
        right: 1rem;
    }
    .top-member-menu > a {
        color: #c5b2d6;
    }
    .top-member-menu > a:hover,
    .modal-text > a:hover {
        color: #852fcf;
        cursor: pointer;
    }
    @media screen and (max-width: 700px) {
        .top-member-menu {
            display: none;
        }
        .modal-bottom-text {
            display: flex;
            flex-direction: column;
        }
    }
    .info-text {        
        text-align: right;
        font-size: 1.2rem;
        line-height: 2rem;
        display: none;
        position: absolute;
        right: 0;
    }
    .confirm-text {
        color: green;
    }
    .warning-text {
        color: red;
    }
    .duplicationCheckBtn {
        position: absolute;
        right: 0;
        top: 0;
        line-height: 2;
        padding: 0.5rem 1rem;
        background: transparent;
        border: none;
        color: #852fcf;
        font-size: 1.5rem;
    }
</style>
<header>
    <div class="header-top">
        <a style="text-decoration: none; color: #852fcf;" class="d-flex" href="/">
            <div class="header-img-container">
                <img src="/images/metamong.webp" />
            </div>
            <div class="header-title-container">METAMONG</div>
        </a>
        <!-- <div class="top-member-menu">
            <a onclick="signInModalShow()">LogIn</a>&nbsp;/<a onclick="signUpModalShow()">&nbsp;Sign Up</a>
        </div> -->
    </div>
    <div class="header-bottom" style="z-index: 1;">
        <input type="checkbox" id="active">
        <label for="active" class="menu-btn"><span></span></label>
        <label for="active" class="close"></label>
        <div class="wrapper-mobile">
            <ul>
                <li><a href="/">Meta Home</a></li>
                <li><a href="/lotto">Meta lotto</a></li>
                <li><a href="/forum">Meta Forum</a></li>
                <!-- <li><a onclick="signInModalShow()">LogIn</a></li>
                <li><a onclick="signUpModalShow()">Sign Up</a></li> -->
            </ul>
        </div>
    </div>
    <div class="header-bottom">
        <ul class="wrapper-pc">
            <li><a href="/">Meta Home</a></li>
            <li><a href="/lotto">Meta lotto</a></li>
            <li><a href="/forum">Meta Forum</a></li>
            <!-- <li><a href="/member">Meta member</a></li> -->
        </ul>
    </div>
</header>
<div id="signInModal" class="member-modal">
    <div class="modal-content modal-animate-top modal-card-4">
        <!-- <div class="modal-container modal-red modal-display-container"> 
            <h2>Sign In Modal Header</h2>
        </div> -->
        <span onclick="memberModalHide('signInModal')" class="modal-close-button modal-xlarge modal-display-topright modal-hover modal-hover-opacity">×</span>
        <div class="modal-container">
            <div class="board-title mt-2 mb-3 text-center">
                LOGIN
            </div>
            <form name="signInForm" id="signInForm">
                <div class="d-flex my-3">
                    <input type="text" name="userId" class="sign-input" placeholder="Your ID Here..." />
                </div>
                <div class="d-flex my-3">
                    <input type="password" name="userPassword" class="sign-input" placeholder="Your Password Here..." />
                </div>
                <div class="d-flex my-2">
                    <button class="modal-btn" type="button" onclick="signIn()">Login</button>
                </div>
            </form>
            <div class="my-2 text-center modal-text">
                or use a social network
            </div>
            <div class="d-flex mt-2 mb-3 justify-content-center modal-text">
                <button data-toggle="tooltip" data-placement="top" title="PREPARING" class="modal-btn modal-circle preparing" type="button">
                    <i class="fa-brands fa-twitter"></i>
                </button>
                <button data-toggle="tooltip" data-placement="top" title="PREPARING" class="modal-btn modal-circle preparing" type="button">
                    <i class="fa-brands fa-facebook"></i>
                </button>
                <button data-toggle="tooltip" data-placement="top" title="PREPARING" class="modal-btn modal-circle preparing" type="button">
                    <i class="fa-brands fa-linkedin"></i>
                </button>
            </div>
            <hr/>
            <div class="my-3 text-center modal-text modal-bottom-text">
                Not a member yet? <a onclick="signUpModalShow()">Sign Up</a>
            </div>
        </div>
    </div>
</div>
<div id="signUpModal" class="member-modal">
    <div class="modal-content modal-animate-top modal-card-4">
        <span onclick="memberModalHide('signUpModal')" class="modal-close-button modal-xlarge modal-display-topright modal-hover modal-hover-opacity">×</span>
        <div class="modal-container">
            <div class="board-title mt-2 mb-3 text-center">
                SignUp
            </div>
            <form name="signUpForm" id="signUpForm">
                <div class="my-3 position-relative">
                    <input type="text" class="sign-input" id="memeberId" name="memberId"  placeholder="Your ID Here..." >
                    <div class="info-text">This ID is not available</div>
                    <button type="button" class="duplicationCheckBtn" onclick="duplicationCheck()"><i class="fa-solid fa-check"></i></button>
                </div>
                <div class="d-flex my-3 position-relative">
                    <input type="password" id="memberPassword" class="sign-input" name="memberPassword" onkeyup="checkSamePWD()"  placeholder="Your Passsword Here..." required />
                    <!-- <div class="info-text">Password format is incorrect!</div> -->
                </div>
                <div class="my-3 position-relative">
                    <input type="password" id="pwdCheck" class="sign-input" onkeyup="checkSamePWD()" placeholder="Check Passsword Here..." />
                    <div class="info-text">Password is not Match!</div>
                </div>
                <div class="d-flex my-3">
                    <input type="text" class="sign-input" name="memberName" placeholder="Your Name Here..." />
                </div>
                <div class="my-3 position-relative">
                    <input type="text" id="memberEmail" class="sign-input" name="memberEmail" placeholder="Your Email Here..." />
                    <div class="info-text">Invaild Email!</div>
                </div>
                <div class="d-flex my-2">
                    <button class="modal-btn" type="button" onclick="signUp()">SignUp</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
function signInModalShow() {
    if(document.getElementById('signUpModal').style.display != 'none') {
        document.getElementById('signUpModal').style.display = 'none';
    }
    document.getElementById('signInModal').style.display = 'block';
}
function signUpModalShow() {
    if(document.getElementById('signInModal').style.display != 'none') {
        document.getElementById('signInModal').style.display = 'none';
    }
    document.getElementById('signUpModal').style.display = 'block';
}

function memberModalHide(id) {
    var ele = document.getElementById(id)
    ele.querySelector('form').reset()
    ele.style.display = 'none';
    var infoTextEle =  ele.querySelectorAll('form .info-text');
    infoTextEle.forEach((element, index, array) => {element.style.display = 'none';})
    // for(let i = 0 ; i < infoTextEle.length ; i++) {
    //     infoTextEle[i].style.display = 'none';
    // }
}

function duplicationCheck() {
    let targetId = document.getElementById("memeberId").value;

    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/member/duplicationCheck', true);
    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');

    xhr.send("targetId=" + targetId);

    xhr.onload = () => {
    if (xhr.status == 200) {
        //success
        let resObj = JSON.parse(xhr.response);
        let infoText = "";
        if(!resObj.result) {
            // 중복아님
            document.getElementById("memeberId").nextElementSibling.classList.remove("warning-text");
            document.getElementById("memeberId").nextElementSibling.classList.add("confirm-text");
            infoText = "This ID is Available.";
        } else {       
            // 중복임
            document.getElementById("memeberId").nextElementSibling.classList.remove("confirm-text");
            document.getElementById("memeberId").nextElementSibling.classList.add("warning-text");
            infoText = "This ID is Not Available.";
        }
        document.getElementById("memeberId").nextElementSibling.innerHTML = infoText;
        document.getElementById("memeberId").nextElementSibling.style.display = "block";     
    } else {
        //failed
        alert("Restart Duplication Check!")
    }
}
}

function checkSamePWD() {
    let pwd1 = document.getElementById("memberPassword").value;
    let pwd2 = document.getElementById("pwdCheck").value;
    let nextElementSibling = document.getElementById("pwdCheck").nextElementSibling;

    let infoText = "";

    if(pwd1 != pwd2) {
        nextElementSibling.classList.remove("confirm-text");
        nextElementSibling.classList.add("warning-text");
        infoText = "Password is not Match!";
    } else {
        nextElementSibling.classList.remove("warning-text");
        nextElementSibling.classList.add("confirm-text");        
        infoText = "Password is Match!";   
    }
    nextElementSibling.innerHTML = infoText;
    nextElementSibling.style.display = "block";

}

// function confirmPWD() {
//     let pwdRule = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@!%*#?&])[A-Za-z\d@!%*#?&]{8,}$/i;
//     console.log(pwdRule.test(document.getElementById("memberPassword").value))
// }

function confirmEmail() {
    let emailRule = /^[a-zA-Z0-9+-\_.]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$/i;
    console.log(emailRule.test(document.getElementById("memberEmail").value))
    let nextElementSibling = document.getElementById("memberEmail").nextElementSibling;

    if(emailRule.test(document.getElementById("memberEmail").value)) {
        nextElementSibling.classList.remove("warning-text");
        nextElementSibling.classList.add("confirm-text");
        nextElementSibling.innerHTML = "Valid Email!";
        nextElementSibling.style.display = "block";
        return true;
    } else {
        nextElementSibling.classList.remove("confirm-text");
        nextElementSibling.classList.add("warning-text");
        nextElementSibling.innerHTML = "Invalid Email!";        
        nextElementSibling.style.display = "block";
        return false;
    }
}

function signUp() {
    
    //confirmPWD()
    let confirmEmailResult = confirmEmail();
    let warningTextResult =  document.getElementsByClassName("warning-text");
    let confirmTextResult =  document.getElementsByClassName("confirm-text");
    console.log(warningTextResult.length)

    if(!confirmEmailResult) {

    }

    if(confirmEmailResult && warningTextResult.length == 0 && confirmTextResult.length == 3) {
        var form = document.getElementById('signUpForm');
        var formData = serialize(form);
    
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/member/signUp', true);
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        xhr.send(formData);
    
        xhr.onload = () => {
            if (xhr.status == 200) {
                //success                
                let resObj = JSON.parse(xhr.response);
                if(!resObj.result) {
                    alert("회원가입 실패!");
                } else {
                    alert("회원가입 성공!");
                }
            } else {
                //failed
                alert("회원가입 실패!");
            }
            memberModalHide('signUpModal');
        }
    }
}


// 로그인
function signIn() {
    var form = document.getElementById('signInForm');
    var formData = serialize(form);

    var xhr = new XMLHttpRequest();
    xhr.open('POST', '/member/signIn', true);
    xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
    xhr.send(formData);

    xhr.onload = () => {
        if (xhr.status == 200) {
            //success                
            let resObj = JSON.parse(xhr.response);
            if(!resObj.result) {
                alert("로그인 실패!");
            } else {
                alert("로그인 성공!");
            }
        } else {
            //failed
            alert("로그인 실패!");
        }
        memberModalHide('signInModal');
    }
}

function serialize(form) {
  const inputs = form.querySelectorAll('input, select, textarea');
  const serialized = [];

  for (let i = 0; i < inputs.length; i++) {
    const input = inputs[i];
    const name = encodeURIComponent(input.name);
    const value = encodeURIComponent(input.value);

    if (name && value) {
      serialized.push(`${name}=${value}`);
    }
  }

  return serialized.join('&');
}
</script>